#Question1 -

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app
spec:
  replicas: 3      #no. of replicas for high availability
  selector:
    matchLabels:
      app: sample-app
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      containers:
      - name: web
        image: nginx:latest      #image name
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: sample-app-service
spec:
  selector:
    app: sample-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP      #service type

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-update
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sample-app
  template:
    metadata:
      labels:
        app: sample-app
        version: "2.0"       #Update the version label to trigger a rollout
    spec:
      containers:
      - name: web
        image: nginx:1.17      #You can change this to the updated image
        ports:
        - containerPort: 80


#=========================================================================================================================
#Question 2->


# main.tf

provider "google" {
  credentials = file(var.credentials_file)
  project     = var.project_id
  region      = var.region
}

module "pubsub_topic" {
  source      = "./modules/pubsub_topic"
  project_id  = var.project_id
  topic_name  = var.topic_name
}

# variables.tf

variable "project_id" {
  description = "The ID of the Google Cloud project"
}

variable "region" {
  description = "The region in which resources will be created"
}

variable "topic_name" {
  description = "The name of the Pub/Sub topic"
}

variable "credentials_file" {
  description = "Path to the JSON file containing the service account key for authentication"
}

# modules/pubsub_topic/main.tf

variable "project_id" {
  description = "The ID of the Google Cloud project"
}

variable "topic_name" {
  description = "The name of the Pub/Sub topic"
}

resource "google_pubsub_topic" "pubsub_topic" {
  name = var.topic_name
}

output "topic_name" {
  value = google_pubsub_topic.pubsub_topic.name
}

# terraform.tfvars

project_id        = "your-project-id"
region            = "your-region"
topic_name        = "your-topic-name"
credentials_file  = "path/to/your/credentials.json"

#To apply the Terraform configuration, run the below commands:

terraform init
terraform apply
